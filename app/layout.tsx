import type { Metadata } from 'next';
import localFont from 'next/font/local';
import './globals.css';
import { storyblokInit, apiPlugin } from '@storyblok/react/rsc';
import { COMPONENTS } from './components/bloks';
import Header from './components/Header';
import Footer from './components/Footer';
import StoryblokProvider from './components/bloks/StoryblokProvider';
import { ThemeProvider } from 'next-themes';

const isPreview = process.env.NEXT_PUBLIC_IS_PREVIEW === 'true';

storyblokInit({
  accessToken: process.env.STORYBLOK_API_TOKEN,
  use: [apiPlugin],
  components: COMPONENTS,
  apiOptions: {
    region: 'eu',
  },
});

const geistSans = localFont({
  src: './fonts/GeistVF.woff',
  variable: '--font-geist-sans',
  weight: '100 900',
});
const geistMono = localFont({
  src: './fonts/GeistMonoVF.woff',
  variable: '--font-geist-mono',
  weight: '100 900',
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased font-sans dark:bg-black dark:text-white`}
      >
        <ThemeProvider
          attribute="class"
          defaultTheme="dark"
          enableSystem={false}
        >
          <Header />
          {isPreview ? (
            <StoryblokProvider>{children}</StoryblokProvider>
          ) : (
            children
          )}
          <Footer />
        </ThemeProvider>
      </body>
    </html>
  );
}
